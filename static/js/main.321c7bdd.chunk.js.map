{"version":3,"sources":["components/Form/index.js","components/Row/index.js","components/Table/index.js","components/ArtistDetails/index.js","App.js","index.js"],"names":["Form","_ref","searchTerm","submitForm","updateInput","react_default","a","createElement","onSubmit","className","onChange","type","value","Row","datetime","url","venue","key","href","rel","target","name","city","country","moment","format","Table","children","ArtistDetails","message","table","data","artistEvents","numUpcomingShows","rows","map","event","Object","assign","id","Fragment","src","artistInfo","thumb_url","alt","facebook_page_url","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","handleSubmit","preventDefault","state","length","fetchResult","newUrl","window","location","history","pushState","path","prevSearchTerm","localStorage","getItem","query","URL","document","searchParams","get","foundArtist","fetch","concat","res","json","keys","eventRes","eventJson","setItem","React","Component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.321c7bdd.chunk.js","sourcesContent":["import './style.css';\nimport React from 'react';\n\nexport default ({searchTerm, submitForm, updateInput}) => (\n  <form onSubmit={submitForm}>\n    <label>Search for an artist</label>\n    <div className=\"input-wrapper\">\n      <input\n        className=\"searchbox\"\n        onChange={updateInput}\n        type=\"text\"\n        value={searchTerm} />\n      <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />\n    </div>\n  </form>\n);\n","import React from 'react';\nimport moment from 'moment';\n\nexport default ({ datetime, url, venue }) => (\n  <tr key={datetime}>\n    <td><a href={url} rel=\"noopener noreferrer\" target=\"_blank\">{venue.name}</a></td>\n    <td>{venue.city}</td>\n    <td>{venue.country}</td>\n    <td>{moment(datetime).format(\"DD MMM 'YY\")}</td>\n  </tr>\n);\n","import './style.css';\nimport React from 'react';\n\nexport default ({ children }) => (\n  <table>\n    <thead>\n      <tr>\n        <th>Venue</th>\n        <th>City</th>\n        <th>Country</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {children}\n    </tbody>\n  </table>\n);\n","import './style.css';\nimport React from 'react';\nimport Row from '../Row/';\nimport Table from '../Table/';\n\nexport default ({ data }) => {\n  /**\n   * if the artist has upcoming shows, show a table of the shows,\n   * otherwise, display a message to the user\n   */\n  let message, table;\n  if (data.artistEvents && data.numUpcomingShows !== 0) {\n    const rows = data.artistEvents.map(event => <Row key={event.id} {...event} />);\n    table = <Table>{rows}</Table>;\n  } else {\n    message = <p>Sorry, this artist doesn&#39;t have any upcoming shows. Please check back later.</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"artist-details\">\n        <img\n          className=\"artist-image\"\n          src={data.artistInfo.thumb_url}\n          alt={data.artistInfo.name}\n        />\n        <div className=\"artist-details__top-level\">\n          <h2>{data.artistInfo.name}</h2>\n          {data.artistInfo.facebook_page_url &&\n            <a\n              href={data.artistInfo.facebook_page_url}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\">\n              {data.artistInfo.name}&#39;s Facebook page\n            </a>\n          }\n          {message}\n        </div>\n      </div>\n      {table}\n    </React.Fragment>\n  )\n}\n","import \"./index.css\";\nimport React from \"react\";\nimport fetch from \"isomorphic-fetch\";\n\nimport Form from \"./components/Form/\";\nimport ArtistDetails from \"./components/ArtistDetails/\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    let prevSearchTerm = window.localStorage.getItem(\"searchTerm\") || \"\";\n    const params = new URL(document.location).searchParams;\n    const query = params.get(\"query\");\n\n    if (query && query.length > 0) {\n      prevSearchTerm = query;\n    }\n\n    this.state = {\n      artistEvents: null,\n      artistInfo: null,\n      foundArtist: null,\n      numUpcomingShows: null,\n      searchTerm: prevSearchTerm,\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchTerm: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.searchTerm.length === 0) {\n      return;\n    }\n\n    this.fetchResult();\n\n    const newUrl = window.location.href + \"?query=\" + this.state.searchTerm;\n    window.history.pushState({ path: newUrl }, \"\", newUrl);\n  };\n\n  async fetchResult() {\n    const res = await fetch(\n      `https://rest.bandsintown.com/artists/${\n        this.state.searchTerm\n      }?app_id=asdf`\n    );\n    const json = await res.json();\n\n    if (Object.keys(json).length !== 0) {\n      const eventRes = await fetch(\n        `https://rest.bandsintown.com/artists/${\n          this.state.searchTerm\n        }/events/?app_id=asdf`\n      );\n      const eventJson = await eventRes.json();\n\n      this.setState({\n        artistEvents: eventJson,\n        artistInfo: json,\n        foundArtist: true,\n        numUpcomingShows: eventJson.length,\n      });\n\n      window.localStorage.setItem(\"searchTerm\", this.state.searchTerm);\n    } else {\n      this.setState({ foundArtist: false });\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.searchTerm) {\n      this.fetchResult();\n    }\n  }\n\n  render() {\n    let message;\n    if (this.state.foundArtist === false) {\n      message = (\n        <p>\n          Sorry, we couldn't find anyone by that name. Please search for someone\n          else.\n        </p>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <h1>Upcoming Music</h1>\n        <Form\n          submitForm={this.handleSubmit}\n          searchTerm={this.state.searchTerm}\n          updateInput={this.handleChange}\n        />\n        {this.state.foundArtist && <ArtistDetails data={this.state} />}\n        {message}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}